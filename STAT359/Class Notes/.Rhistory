}
test.stat
}
test.stat <- find.test.statistic(table(smoking), expected)
test.stat
1 - pchisq(test.stat, df=1)
table(smoking)
expected
table(smoking) - expected
tuberculosis <- matrix(c(7,27,55,
7,34,52,
7,12,11,
13,18,24),
nrow=3,
ncol=4,
dimnames=list(c("Moderate-advanced","Minimal","Not-present")
,c("O","A","AB","B")
))
tuberculosis
expected <- chisq.test(tuberculosis, simulate.p.value = TRUE)$expected
# In this case, simulate.p.value = TRUE does not impact the results
expected
# Calculate test statistic
test.stat <- find.test.statistic(tuberculosis, expected)
test.stat
df <-(dim(tuberculosis)[1] - 1) * (dim(tuberculosis)[2] - 1)
df
p.val <- 1 - pchisq(test.stat, df = df)
p.val
tuberculosis
expected
tuberculosis - expected
lines <- readLines('~/Documents/uni/STAT359/data/anscombe.csv')
ancombe <- data.frame(x=c(10), y=c(8.04), set=c(1))
set <- 1
for (line in lines[4:length(lines)])
{
# increment set once starting new set
if (grepl("DATASET",line,fixed=TRUE))
{
set <- set + 1
next
}
# skip lines that don't have data
if(grepl("Set", line, fixed=TRUE) || line == ",")
{
next
}
# add data into table
nums <- strsplit(line, ',')
ancombe <- rbind(ancombe, c(as.numeric(nums[[1]][1]), as.numeric(nums[[1]][2]), set))
}
kable(ancombe)
plot(ancombe$x[ancombe$set == 1], ancombe$y[ancombe$set == 1],
main="Set 1", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 2], ancombe$y[ancombe$set == 2],
main="Set 2", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 3], ancombe$y[ancombe$set == 3],
main="Set 3", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 4], ancombe$y[ancombe$set == 4],
main="Set 4", xlab='X', ylab='Y')
r.sq.table <- data.frame(set=c('1','2','3','4'),
r.squared=c(0,0,0,0))
set1 <- lm(ancombe$y[ancombe$set == 1]~ancombe$x[ancombe$set == 1])
r.sq.table$r.squared[1] <- summary(set1)$r.squared
summary(set1)
set2 <- lm(ancombe$y[ancombe$set == 2]~ancombe$x[ancombe$set == 2])
r.sq.table$r.squared[2] <- summary(set2)$r.squared
summary(set2)
set3 <- lm(ancombe$y[ancombe$set == 3]~ancombe$x[ancombe$set == 3])
r.sq.table$r.squared[3] <- summary(set3)$r.squared
summary(set3)
set4 <- lm(ancombe$y[ancombe$set == 4]~ancombe$x[ancombe$set == 4])
r.sq.table$r.squared[4] <- summary(set4)$r.squared
summary(set4)
kable(r.sq.table)
growth <- read.table(file='~/Documents/uni/STAT359/data/growth.txt',
sep='',header=TRUE)
plot(growth$t, growth$height)
a <- 50
b <- 100
c <-  (-1/mean(growth$t)) *  log((a-mean(growth$height)) / (mean(growth$height)*b))
c
library(nls2)
model.logistic <- nls(height~a / (1+b*exp(-c*t)),
data=growth,
start=list(a=a,b=b,c=c))
summary(model.logistic)
a <- 50
b <- 50
c <- (-1/mean(growth$t)) * log( (-log(mean(growth$height/a))) / b)
c
model.gompertz <- nls(height~a*exp(-b*exp(-c*t)),
data=growth,
start=list(a=a,b=b,c=c))
summary(model.gompertz)
a <- 50
c <- 1
b <- -(1/mean(growth$t)+c) * log((mean(growth$height)-a)/a)
-(1/mean(growth$t)+c)
log((mean(growth$height)-a)/a)
(mean(growth$height)-a)/a
b
model.bert <- nls(height~a-a*exp(-b*(t+c)),
data=growth,
start=list(a=a,b=b,c=c))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
smoking <- read.table(file='~/Documents/uni/STAT359/data/LungCancer.csv',
sep=',',
header=TRUE)
table(smoking)
smoke.table <- table(smoking)
expected <- chisq.test(smoke.table)$expected
expected
#
find.test.statistic <- function(table, expected)
{
test.stat <- 0
for (i in 1:length(table))
{
test.stat <- test.stat + ((table[i] - expected[i])^2/expected[i])
}
test.stat
}
test.stat <- find.test.statistic(table(smoking), expected)
test.stat
1 - pchisq(test.stat, df=1)
table(smoking)
expected
table(smoking) - expected
tuberculosis <- matrix(c(7,27,55,
7,34,52,
7,12,11,
13,18,24),
nrow=3,
ncol=4,
dimnames=list(c("Moderate-advanced","Minimal","Not-present")
,c("O","A","AB","B")
))
tuberculosis
expected <- chisq.test(tuberculosis, simulate.p.value = TRUE)$expected
# In this case, simulate.p.value = TRUE does not impact the results
expected
# Calculate test statistic
test.stat <- find.test.statistic(tuberculosis, expected)
test.stat
df <-(dim(tuberculosis)[1] - 1) * (dim(tuberculosis)[2] - 1)
df
p.val <- 1 - pchisq(test.stat, df = df)
p.val
tuberculosis
expected
tuberculosis - expected
lines <- readLines('~/Documents/uni/STAT359/data/anscombe.csv')
ancombe <- data.frame(x=c(10), y=c(8.04), set=c(1))
set <- 1
for (line in lines[4:length(lines)])
{
# increment set once starting new set
if (grepl("DATASET",line,fixed=TRUE))
{
set <- set + 1
next
}
# skip lines that don't have data
if(grepl("Set", line, fixed=TRUE) || line == ",")
{
next
}
# add data into table
nums <- strsplit(line, ',')
ancombe <- rbind(ancombe, c(as.numeric(nums[[1]][1]), as.numeric(nums[[1]][2]), set))
}
kable(ancombe)
plot(ancombe$x[ancombe$set == 1], ancombe$y[ancombe$set == 1],
main="Set 1", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 2], ancombe$y[ancombe$set == 2],
main="Set 2", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 3], ancombe$y[ancombe$set == 3],
main="Set 3", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 4], ancombe$y[ancombe$set == 4],
main="Set 4", xlab='X', ylab='Y')
r.sq.table <- data.frame(set=c('1','2','3','4'),
r.squared=c(0,0,0,0))
set1 <- lm(ancombe$y[ancombe$set == 1]~ancombe$x[ancombe$set == 1])
r.sq.table$r.squared[1] <- summary(set1)$r.squared
summary(set1)
set2 <- lm(ancombe$y[ancombe$set == 2]~ancombe$x[ancombe$set == 2])
r.sq.table$r.squared[2] <- summary(set2)$r.squared
summary(set2)
set3 <- lm(ancombe$y[ancombe$set == 3]~ancombe$x[ancombe$set == 3])
r.sq.table$r.squared[3] <- summary(set3)$r.squared
summary(set3)
set4 <- lm(ancombe$y[ancombe$set == 4]~ancombe$x[ancombe$set == 4])
r.sq.table$r.squared[4] <- summary(set4)$r.squared
summary(set4)
kable(r.sq.table)
growth <- read.table(file='~/Documents/uni/STAT359/data/growth.txt',
sep='',header=TRUE)
plot(growth$t, growth$height)
a <- 50
b <- 100
c <-  (-1/mean(growth$t)) *  log((a-mean(growth$height)) / (mean(growth$height)*b))
c
library(nls2)
model.logistic <- nls(height~a / (1+b*exp(-c*t)),
data=growth,
start=list(a=a,b=b,c=c))
summary(model.logistic)
a <- 50
b <- 50
c <- (-1/mean(growth$t)) * log( (-log(mean(growth$height/a))) / b)
c
model.gompertz <- nls(height~a*exp(-b*exp(-c*t)),
data=growth,
start=list(a=a,b=b,c=c))
summary(model.gompertz)
a <- 50
c <- 1
# b <- -(1/mean(growth$t)+c) * log((mean(growth$height)-a)/a)
b
#model.bert <- nls(height~a-a*exp(-b*(t+c)),
#                      data=growth,
#                      start=list(a=a,b=b,c=c))
summary(model.bert)
plot(growth$t, growth$height)
line.x <- seq(0,50,0.1)
lines(line.x, predict(model.logistic,list(t=line.x)), col='red')
lines(line.x, predict(model.gompertz,list(t=line.x)), col='green')
lines(line.x, predict(model.bert,list(t=line.x)), col='blue')
asymptote.calculator <- function(model, alpha)
{
a <- summary(model)$coef[1]
se <- summary(model)$coef[4]
z.alpha <- qnorm(alpha/2)
c(a + se*z.alpha, a - se*z.alpha)
}
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
smoking <- read.table(file='~/Documents/uni/STAT359/data/LungCancer.csv',
sep=',',
header=TRUE)
table(smoking)
smoke.table <- table(smoking)
expected <- chisq.test(smoke.table)$expected
expected
#
find.test.statistic <- function(table, expected)
{
test.stat <- 0
for (i in 1:length(table))
{
test.stat <- test.stat + ((table[i] - expected[i])^2/expected[i])
}
test.stat
}
test.stat <- find.test.statistic(table(smoking), expected)
test.stat
1 - pchisq(test.stat, df=1)
table(smoking)
expected
table(smoking) - expected
tuberculosis <- matrix(c(7,27,55,
7,34,52,
7,12,11,
13,18,24),
nrow=3,
ncol=4,
dimnames=list(c("Moderate-advanced","Minimal","Not-present")
,c("O","A","AB","B")
))
tuberculosis
expected <- chisq.test(tuberculosis, simulate.p.value = TRUE)$expected
# In this case, simulate.p.value = TRUE does not impact the results
expected
# Calculate test statistic
test.stat <- find.test.statistic(tuberculosis, expected)
test.stat
df <-(dim(tuberculosis)[1] - 1) * (dim(tuberculosis)[2] - 1)
df
p.val <- 1 - pchisq(test.stat, df = df)
p.val
tuberculosis
expected
tuberculosis - expected
lines <- readLines('~/Documents/uni/STAT359/data/anscombe.csv')
ancombe <- data.frame(x=c(10), y=c(8.04), set=c(1))
set <- 1
for (line in lines[4:length(lines)])
{
# increment set once starting new set
if (grepl("DATASET",line,fixed=TRUE))
{
set <- set + 1
next
}
# skip lines that don't have data
if(grepl("Set", line, fixed=TRUE) || line == ",")
{
next
}
# add data into table
nums <- strsplit(line, ',')
ancombe <- rbind(ancombe, c(as.numeric(nums[[1]][1]), as.numeric(nums[[1]][2]), set))
}
kable(ancombe)
plot(ancombe$x[ancombe$set == 1], ancombe$y[ancombe$set == 1],
main="Set 1", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 2], ancombe$y[ancombe$set == 2],
main="Set 2", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 3], ancombe$y[ancombe$set == 3],
main="Set 3", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 4], ancombe$y[ancombe$set == 4],
main="Set 4", xlab='X', ylab='Y')
r.sq.table <- data.frame(set=c('1','2','3','4'),
r.squared=c(0,0,0,0))
set1 <- lm(ancombe$y[ancombe$set == 1]~ancombe$x[ancombe$set == 1])
r.sq.table$r.squared[1] <- summary(set1)$r.squared
summary(set1)
set2 <- lm(ancombe$y[ancombe$set == 2]~ancombe$x[ancombe$set == 2])
r.sq.table$r.squared[2] <- summary(set2)$r.squared
summary(set2)
set3 <- lm(ancombe$y[ancombe$set == 3]~ancombe$x[ancombe$set == 3])
r.sq.table$r.squared[3] <- summary(set3)$r.squared
summary(set3)
set4 <- lm(ancombe$y[ancombe$set == 4]~ancombe$x[ancombe$set == 4])
r.sq.table$r.squared[4] <- summary(set4)$r.squared
summary(set4)
kable(r.sq.table)
growth <- read.table(file='~/Documents/uni/STAT359/data/growth.txt',
sep='',header=TRUE)
plot(growth$t, growth$height)
a <- 50
b <- 100
c <-  (-1/mean(growth$t)) *  log((a-mean(growth$height)) / (mean(growth$height)*b))
c
library(nls2)
model.logistic <- nls(height~a / (1+b*exp(-c*t)),
data=growth,
start=list(a=a,b=b,c=c))
summary(model.logistic)
a <- 50
b <- 50
c <- (-1/mean(growth$t)) * log( (-log(mean(growth$height/a))) / b)
c
model.gompertz <- nls(height~a*exp(-b*exp(-c*t)),
data=growth,
start=list(a=a,b=b,c=c))
summary(model.gompertz)
a <- 50
c <- 1
# b <- -(1/mean(growth$t)+c) * log((mean(growth$height)-a)/a)
b
#model.bert <- nls(height~a-a*exp(-b*(t+c)),
#                      data=growth,
#                      start=list(a=a,b=b,c=c))
summary(model.bert)
plot(growth$t, growth$height)
line.x <- seq(0,50,0.1)
lines(line.x, predict(model.logistic,list(t=line.x)), col='red')
lines(line.x, predict(model.gompertz,list(t=line.x)), col='green')
lines(line.x, predict(model.bert,list(t=line.x)), col='blue')
asymptote.calculator <- function(model, alpha)
{
a <- summary(model)$coef[1]
se <- summary(model)$coef[4]
z.alpha <- qnorm(alpha/2)
c(a + se*z.alpha, a - se*z.alpha)
}
alpha <- 0.05
# logistic model
asymptote.calculator(model.logistic, alpha
# logistic model
asymptote.calculator(model.logistic, alpha)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
smoking <- read.table(file='~/Documents/uni/STAT359/data/LungCancer.csv',
sep=',',
header=TRUE)
table(smoking)
smoke.table <- table(smoking)
expected <- chisq.test(smoke.table)$expected
expected
#
find.test.statistic <- function(table, expected)
{
test.stat <- 0
for (i in 1:length(table))
{
test.stat <- test.stat + ((table[i] - expected[i])^2/expected[i])
}
test.stat
}
test.stat <- find.test.statistic(table(smoking), expected)
test.stat
1 - pchisq(test.stat, df=1)
table(smoking)
expected
table(smoking) - expected
tuberculosis <- matrix(c(7,27,55,
7,34,52,
7,12,11,
13,18,24),
nrow=3,
ncol=4,
dimnames=list(c("Moderate-advanced","Minimal","Not-present")
,c("O","A","AB","B")
))
tuberculosis
expected <- chisq.test(tuberculosis, simulate.p.value = TRUE)$expected
# In this case, simulate.p.value = TRUE does not impact the results
expected
# Calculate test statistic
test.stat <- find.test.statistic(tuberculosis, expected)
test.stat
df <-(dim(tuberculosis)[1] - 1) * (dim(tuberculosis)[2] - 1)
df
p.val <- 1 - pchisq(test.stat, df = df)
p.val
tuberculosis
expected
tuberculosis - expected
lines <- readLines('~/Documents/uni/STAT359/data/anscombe.csv')
ancombe <- data.frame(x=c(10), y=c(8.04), set=c(1))
set <- 1
for (line in lines[4:length(lines)])
{
# increment set once starting new set
if (grepl("DATASET",line,fixed=TRUE))
{
set <- set + 1
next
}
# skip lines that don't have data
if(grepl("Set", line, fixed=TRUE) || line == ",")
{
next
}
# add data into table
nums <- strsplit(line, ',')
ancombe <- rbind(ancombe, c(as.numeric(nums[[1]][1]), as.numeric(nums[[1]][2]), set))
}
kable(ancombe)
plot(ancombe$x[ancombe$set == 1], ancombe$y[ancombe$set == 1],
main="Set 1", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 2], ancombe$y[ancombe$set == 2],
main="Set 2", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 3], ancombe$y[ancombe$set == 3],
main="Set 3", xlab='X', ylab='Y')
plot(ancombe$x[ancombe$set == 4], ancombe$y[ancombe$set == 4],
main="Set 4", xlab='X', ylab='Y')
r.sq.table <- data.frame(set=c('1','2','3','4'),
r.squared=c(0,0,0,0))
set1 <- lm(ancombe$y[ancombe$set == 1]~ancombe$x[ancombe$set == 1])
r.sq.table$r.squared[1] <- summary(set1)$r.squared
summary(set1)
set2 <- lm(ancombe$y[ancombe$set == 2]~ancombe$x[ancombe$set == 2])
r.sq.table$r.squared[2] <- summary(set2)$r.squared
summary(set2)
set3 <- lm(ancombe$y[ancombe$set == 3]~ancombe$x[ancombe$set == 3])
r.sq.table$r.squared[3] <- summary(set3)$r.squared
summary(set3)
set4 <- lm(ancombe$y[ancombe$set == 4]~ancombe$x[ancombe$set == 4])
r.sq.table$r.squared[4] <- summary(set4)$r.squared
summary(set4)
kable(r.sq.table)
growth <- read.table(file='~/Documents/uni/STAT359/data/growth.txt',
sep='',header=TRUE)
plot(growth$t, growth$height)
a <- 50
b <- 100
c <-  (-1/mean(growth$t)) *  log((a-mean(growth$height)) / (mean(growth$height)*b))
c
library(nls2)
model.logistic <- nls(height~a / (1+b*exp(-c*t)),
data=growth,
start=list(a=a,b=b,c=c))
summary(model.logistic)
a <- 50
b <- 50
c <- (-1/mean(growth$t)) * log( (-log(mean(growth$height/a))) / b)
c
model.gompertz <- nls(height~a*exp(-b*exp(-c*t)),
data=growth,
start=list(a=a,b=b,c=c))
summary(model.gompertz)
a <- 50
c <- 1
# b <- -(1/mean(growth$t)+c) * log((mean(growth$height)-a)/a)
b
#model.bert <- nls(height~a-a*exp(-b*(t+c)),
#                      data=growth,
#                      start=list(a=a,b=b,c=c))
summary(model.bert)
plot(growth$t, growth$height)
line.x <- seq(0,50,0.1)
lines(line.x, predict(model.logistic,list(t=line.x)), col='red')
lines(line.x, predict(model.gompertz,list(t=line.x)), col='green')
lines(line.x, predict(model.bert,list(t=line.x)), col='blue')
asymptote.calculator <- function(model, alpha)
{
a <- summary(model)$coef[1]
se <- summary(model)$coef[4]
z.alpha <- qnorm(alpha/2)
c(a + se*z.alpha, a - se*z.alpha)
}
alpha <- 0.05
# logistic model
asymptote.calculator(model.logistic, alpha)
asymptote.calculator(model.gompertz, alpha)
asymptote.calculator(model.bert, alpha)
